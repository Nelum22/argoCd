pipeline {
  agent {
    docker {
      image 'nelum22/simple-nelum-docker-agent:v1' 
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }


  stages {

    stage('Prepare Workspace') {
      steps {
        sh 'ls -la'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://16.231.218.126:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar_cred', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            npm install -g sonar-scanner

            sonar-scanner \
              -Dsonar.projectKey=static-website \
              -Dsonar.sources=. \
              -Dsonar.host.url=${SONAR_URL} \
              -Dsonar.login=$SONAR_AUTH_TOKEN
          '''
        }
      }
    }

    stage('Build & Push Docker Image') {
      steps {
        script {
          sh "docker build -t ${IMAGE} ."
          docker.withRegistry('https://index.docker.io/v1/', 'dockerHub_cred') {
            docker.image(IMAGE).push()
          }
        }
      }
    }

    stage('Update Deployment File') {
       environment {
            GIT_REPO_NAME = "argoCd"
            GIT_USER_NAME = "nelum22"
        }
      steps {
        withCredentials([string(credentialsId: 'github_tocken', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "jenkins@gmail.com"
            git config user.name "Jenkins"

            sed -i "s|image: .*|image: nelum22/static-website:${BUILD_NUMBER}|" k8s/deployment.yaml

            git remote set-url origin https://nelum22:${GITHUB_TOKEN}@github.com/nelum22/argoCd.git
            git pull origin main
            git add k8s/deployment.yaml
            git commit -m "Update deployment image to ${BUILD_NUMBER}"
            git push origin HEAD:main
          '''
        }
      }
    }
  }
}
